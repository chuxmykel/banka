{
  "swagger": "2.0",
  "host": "a-bank.herokuapp.com",
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "info": {
    "version": "1.0.0",
    "title": "Banka API V1",
    "description": "A light-weight core banking application",
    "contact": {
      "email": "ngwobiachukwudi@gmail.com"
    }
  },
  "consumes": [
    "application/x-www-form-urlencoded",
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "authentication"
        ],
        "description": "Creates an account for a new user",
        "summary": "User sign up",
        "operationId": "ApiV1AuthSignupPost",
        "deprecated": false,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The user object",
            "schema": {
              "type": "object",
              "required": [
                "firstName",
                "lastName",
                "email",
                "password"
              ],
              "properties": {
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account successfully created",
            "schema": {
              "$ref": "#/definitions/userSignupResponse"
            },
            "headers": {
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/badRequest"
            }
          },
          "422": {
            "description": "User already exists (Unprocessible entity)",
            "schema": {
              "$ref": "#/definitions/userExists"
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "authentication"
        ],
        "description": "Creates an account for a new user",
        "summary": "User sign in",
        "operationId": "ApiV1AuthSigninPost",
        "deprecated": false,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userLogin",
            "description": "The user object",
            "schema": {
              "type": "object",
              "required": [
                "firstName",
                "lastName",
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login Successful",
            "schema": {
              "$ref": "#/definitions/userSignupResponse"
            },
            "headers": {
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/badRequest"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/userNotExists"
            }
          }
        }
      }
    },
    "/auth/superuser": {
      "post": {
        "tags": [
          "authentication"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "description": "Creates an account for a staff or admin user",
        "summary": "Super User sign up",
        "operationId": "ApiV1AuthSuperuser",
        "deprecated": false,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The user object",
            "schema": {
              "type": "object",
              "required": [
                "firstName",
                "lastName",
                "email",
                "password",
                "isAdmin"
              ],
              "properties": {
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "isAdmin": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account successfully created",
            "schema": {
              "$ref": "#/definitions/userSignupResponse"
            },
            "headers": {
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/badRequest"
            }
          },
          "422": {
            "description": "User already exists (Unprocessible entity)",
            "schema": {
              "$ref": "#/definitions/userExists"
            }
          }
        }
      }
    },
    "/auth/passwordreset": {
      "post": {
        "tags": [
          "authentication"
        ],
        "description": "Reset User Password",
        "summary": "Password Reset",
        "operationId": "ApiV1AuthPassword Reset",
        "deprecated": false,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "email",
            "description": "The email of the account whose password is to be reset",
            "schema": {
              "type": "object",
              "required": [
                "email"
              ],
              "properties": {
                "email": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A password reset link has been sent to your email",
            "schema": {
              "$ref": "#/definitions/resetResponse"
            },
            "headers": {
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/badRequest"
            }
          }
        }
      }
    },
    "/accounts": {
      "post": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "description": "Creates a bank account for a user",
        "summary": "Create a new account",
        "operationId": "ApiV1BankAcc",
        "deprecated": false,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "accDetails",
            "description": "Details for the new account",
            "schema": {
              "type": "object",
              "required": [
                "type",
                "initialDeposit"
              ],
              "properties": {
                "type": {
                  "type": "string"
                },
                "initialDeposit": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account Created Successfully",
            "schema": {
              "$ref": "#/definitions/newAccResponse"
            },
            "headers": {
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/badRequest"
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "admin/staff"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "description": "View a list of all bank accounts.",
        "summary": "Get all bank accounts",
        "operationId": "ApiV1GetAllAcc",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string",
            "description": "The status of the account or group of accounts to be fetched"
          }
        ],
        "responses": {
          "200": {
            "description": "Accounts fetched Successfully",
            "schema": {
              "$ref": "#/definitions/newAccResponse"
            },
            "headers": {
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          }
        }
      }
    },
    "/accounts/{account-number}": {
      "patch": {
        "tags": [
          "admin/staff"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "description": "Edits the user account status",
        "summary": "Change account status",
        "operationId": "ApiV1StatusUpdate",
        "deprecated": false,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account-number",
            "required": true,
            "type": "integer",
            "description": "The account number to be updated"
          },
          {
            "in": "body",
            "name": "newStatus",
            "description": "New status for the account to be updated",
            "schema": {
              "type": "object",
              "required": [
                "status"
              ],
              "properties": {
                "status": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account updated successfully",
            "schema": {
              "$ref": "#/definitions/updateAccResponse"
            },
            "headers": {
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/badRequest"
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          },
          "403": {
            "description": "Access token does not have the required scope",
            "schema": {
              "$ref": "#/definitions/forbiddenError"
            }
          },
          "404": {
            "description": "Account not found",
            "schema": {
              "$ref": "#/definitions/userNotExists"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin/staff"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "description": "Deletes an account",
        "summary": "Delete an account",
        "operationId": "ApiV1DeleteAcc",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account-number",
            "required": true,
            "type": "integer",
            "description": "The account number to be deleted"
          }
        ],
        "responses": {
          "200": {
            "description": "Account deleted successfully",
            "schema": {
              "$ref": "#/definitions/deleteAccResponse"
            },
            "headers": {
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/badRequest"
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          },
          "403": {
            "description": "Access token does not have the required scope",
            "schema": {
              "$ref": "#/definitions/forbiddenError"
            }
          },
          "404": {
            "description": "Account not found",
            "schema": {
              "$ref": "#/definitions/userNotExists"
            }
          }
        }
      },
      "get": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "description": "View a specific account's details",
        "summary": "View a specific account's details",
        "operationId": "ApiV1viewAcctDetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account-number",
            "required": true,
            "type": "integer",
            "description": "The account number whose details we want to view"
          }
        ],
        "responses": {
          "200": {
            "description": "Account's transactions fetched successfully",
            "schema": {
              "$ref": "#/definitions/multiTransaction"
            },
            "headers": {
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          },
          "404": {
            "description": "Account not found",
            "schema": {
              "$ref": "#/definitions/userNotExists"
            }
          }
        }
      }
    },
    "/transactions/{account-number}/credit": {
      "post": {
        "tags": [
          "staff(cashier)"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "description": "Credits a user account and creates a new transaction entry",
        "summary": "Creit transaction on an account",
        "operationId": "ApiV1creditAccount",
        "deprecated": false,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account-number",
            "required": true,
            "type": "integer",
            "description": "The account number to be credited"
          },
          {
            "in": "body",
            "name": "transactionDetails",
            "description": "The basic details of the transaction",
            "schema": {
              "type": "object",
              "required": [
                "amount"
              ],
              "properties": {
                "amount": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account credited and transaction entry created successfully",
            "schema": {
              "$ref": "#/definitions/transaction"
            },
            "headers": {
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/badRequest"
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          },
          "403": {
            "description": "Access token does not have the required scope",
            "schema": {
              "$ref": "#/definitions/forbiddenError"
            }
          },
          "404": {
            "description": "Account not found",
            "schema": {
              "$ref": "#/definitions/userNotExists"
            }
          }
        }
      }
    },
    "/transactions/{account-number}/debit": {
      "post": {
        "tags": [
          "staff(cashier)"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "description": "Credits a user account and creates a new transaction entry",
        "summary": "Debit transaction on an account",
        "operationId": "ApiV1debitAccount",
        "deprecated": false,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account-number",
            "required": true,
            "type": "integer",
            "description": "The account number to debit"
          },
          {
            "in": "body",
            "name": "transactionDetails",
            "description": "The basic details of the transaction",
            "schema": {
              "type": "object",
              "required": [
                "amount"
              ],
              "properties": {
                "amount": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account debited and transaction entry created successfully",
            "schema": {
              "$ref": "#/definitions/transaction"
            },
            "headers": {
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/badRequest"
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          },
          "403": {
            "description": "Access token does not have the required scope",
            "schema": {
              "$ref": "#/definitions/forbiddenError"
            }
          },
          "404": {
            "description": "Account not found",
            "schema": {
              "$ref": "#/definitions/userNotExists"
            }
          }
        }
      }
    },
    "/accounts/{account-number}/transactions": {
      "get": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "description": "View an account's transaction history",
        "summary": "View all transactions on an account",
        "operationId": "ApiV1viewAcctTransactions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account-number",
            "required": true,
            "type": "integer",
            "description": "The account number whose transaction history we want to view"
          }
        ],
        "responses": {
          "200": {
            "description": "Account's transactions fetched successfully",
            "schema": {
              "$ref": "#/definitions/multiTransaction"
            },
            "headers": {
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          },
          "404": {
            "description": "Account not found",
            "schema": {
              "$ref": "#/definitions/userNotExists"
            }
          }
        }
      }
    },
    "/transactions/{transactionId}": {
      "get": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "description": "View a specific transaction",
        "summary": "View a specific transaction",
        "operationId": "ApiV1viewSpecifictTransaction",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "integer",
            "description": "The id of the transaction to be fetched"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction fetched successfully",
            "schema": {
              "$ref": "#/definitions/multiTransaction"
            },
            "headers": {
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          },
          "404": {
            "description": "Transaction with transactionId not found",
            "schema": {
              "$ref": "#/definitions/userNotExists"
            }
          }
        }
      }
    },
    "/user/{user-email-address}/accounts": {
      "get": {
        "tags": [
          "admin/staff"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "description": "View all accounts owned by a specific user",
        "summary": "View all accounts owned by a specific user",
        "operationId": "ApiV1viewUserAccts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-email-address",
            "required": true,
            "type": "string",
            "description": "The email of the user whose accounts we want to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction fetched successfully",
            "schema": {
              "$ref": "#/definitions/getEmailAcc"
            },
            "headers": {
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError"
            }
          },
          "404": {
            "description": "Transaction with transactionId not found",
            "schema": {
              "$ref": "#/definitions/userNotExists"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "userSignupResponse": {
      "title": "userSignupResponse",
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/signUp"
          }
        }
      }
    },
    "signUp": {
      "title": "signUp",
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "id": {
          "type": "number",
          "format": "int64"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "userExists": {
      "title": "userExists",
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "format": "int64",
          "example": 422
        },
        "error": {
          "type": "string"
        }
      }
    },
    "userNotExists": {
      "title": "userNotExists",
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "format": "int64",
          "example": 404
        },
        "error": {
          "type": "string"
        }
      }
    },
    "badRequest": {
      "title": "badRequest",
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "format": "int64",
          "example": 400
        },
        "error": {
          "type": "string"
        }
      }
    },
    "UnauthorizedError": {
      "title": "noAuth",
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "format": "int64",
          "example": 401
        },
        "error": {
          "type": "string"
        }
      }
    },
    "forbiddenError": {
      "title": "forbidden",
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "format": "int64",
          "example": 403
        },
        "error": {
          "type": "string"
        }
      }
    },
    "newAccResponse": {
      "title": "newAccResponse",
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "format": "int64",
          "example": 201
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/newAccData"
          }
        }
      }
    },
    "newAccData": {
      "title": "newAccData",
      "type": "object",
      "properties": {
        "accountNumber": {
          "type": "number",
          "format": "int64",
          "example": 1234567890
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "openingBalance": {
          "type": "number",
          "format": "float",
          "example": 5000
        }
      }
    },
    "updateAccResponse": {
      "title": "updateAccResponse",
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "format": "int64",
          "example": 200
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/accUpdate"
          }
        }
      }
    },
    "deleteAccResponse": {
      "title": "updateAccResponse",
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "format": "int64",
          "example": 200
        },
        "message": {
          "type": "string"
        }
      }
    },
    "resetResponse": {
      "title": "resetResponse",
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "format": "int64",
          "example": 200
        },
        "message": {
          "type": "string"
        }
      }
    },
    "accUpdate": {
      "title": "accUpdate",
      "type": "object",
      "properties": {
        "accountNumber": {
          "type": "number",
          "format": "int64",
          "example": 1234567890
        },
        "status": {
          "type": "string"
        }
      }
    },
    "transaction": {
      "title": "transaction",
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "format": "int64",
          "example": 201
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/transBody"
          }
        }
      }
    },
    "transBody": {
      "title": "transBody",
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "number",
          "format": "int64",
          "example": 1
        },
        "accountNumber": {
          "type": "number",
          "format": "int64",
          "example": 1234567890
        },
        "amount": {
          "type": "number",
          "format": "double",
          "example": 25000.58
        },
        "cashier": {
          "type": "number",
          "format": "int64",
          "example": 1
        },
        "transactionType": {
          "type": "string"
        },
        "accountBalance": {
          "type": "string"
        }
      }
    },
    "multiTransaction": {
      "title": "transaction",
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "format": "int64",
          "example": 200
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/multiTransBody"
          }
        }
      }
    },
    "multiTransBody": {
      "title": "multiTransBody",
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "number",
          "format": "int64",
          "example": 1
        },
        "createdOn": {
          "type": "string",
          "format": "date-time",
          "example": "2017-07-21T17:32:28Z"
        },
        "type": {
          "type": "string"
        },
        "accountNumber": {
          "type": "number",
          "format": "int",
          "example": 1234567890
        },
        "amount": {
          "type": "number",
          "format": "double",
          "example": 25000.58
        },
        "oldBalance": {
          "type": "number",
          "format": "double",
          "example": 25000.58
        },
        "newBalance": {
          "type": "number",
          "format": "double",
          "example": 50000.58
        }
      }
    },
    "getEmailAcc": {
      "title": "getEmailAcc",
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "format": "int64",
          "example": 201
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/emailAcc"
          }
        }
      }
    },
    "emailAcc": {
      "title": "emailAcc",
      "type": "object",
      "properties": {
        "createdOn": {
          "type": "string",
          "format": "date-time",
          "example": "2017-07-21T17:32:28Z"
        },
        "accountNumber": {
          "type": "number",
          "format": "int64",
          "example": 1234567890
        },
        "type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "balance": {
          "type": "number",
          "format": "float",
          "example": 5000
        }
      }
    }
  }
}
